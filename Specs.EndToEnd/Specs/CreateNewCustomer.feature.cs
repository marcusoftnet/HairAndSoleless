// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace Specs.EndToEnd.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create customer")]
    public partial class CreateCustomerFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateNewCustomer.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create customer", "In order to keep track of the different customer we have been at\nAs an Avega Coac" +
                    "h\nI want to be able to create a new customer", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Navigate to the new customer page")]
        public virtual void NavigateToTheNewCustomerPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navigate to the new customer page", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am on the \'Customers\' page");
#line 8
 testRunner.When("I choose to create new customer");
#line 9
 testRunner.Then("I should be on the \'Create Customer\' page");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating new customer without validation errors")]
        public virtual void CreatingNewCustomerWithoutValidationErrors()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating new customer without validation errors", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("there are no customers named \'Testing Inc.\' in the database");
#line 13
  testRunner.And("I am on the \'Create Customer\' page");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Contact"});
            table1.AddRow(new string[] {
                        "Testing Inc.",
                        "demon@testinc.com"});
#line 14
 testRunner.When("I create the following customer", ((string)(null)), table1);
#line 17
 testRunner.Then("I should be on the \'Customers\' page");
#line 18
  testRunner.And("a customer named \'Testing Inc.\' should be in the customer list");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Creating new customer with missing values should give validation error")]
        [NUnit.Framework.TestCaseAttribute("Name")]
        [NUnit.Framework.TestCaseAttribute("Contact")]
        public virtual void CreatingNewCustomerWithMissingValuesShouldGiveValidationError(string field)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Creating new customer with missing values should give validation error", ((string[])(null)));
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
    testRunner.Given("I am on the \'Create Customer\' page");
#line 22
 testRunner.When(string.Format("I create a customer with \'{0}\' set to empty", field));
#line 23
 testRunner.Then(string.Format("a required field validation error for \'{0}\' should be displayed", field));
#line 24
  testRunner.And("I should still be on the \'Create Customer\' page");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
